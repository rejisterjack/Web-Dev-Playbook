// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String          @id @default(uuid())
  name             String
  email            String          @unique
  wrtPosts         Post[]          @relation("wrtPosts")
  favPosts         Post[]          @relation("favPosts")
  userPreference   UserPreference? @relation(fields: [userPreferenceId], references: [id])
  userPreferenceId String?         @unique
  role             Role            @default(USER)

  // block level
  // @@unique([name, email]) // same name and email can't be repeated
}

model UserPreference {
  id           String  @id @default(uuid())
  emailUpdates Boolean
  User User?
}

model Post {
  id         String     @id @default(uuid())
  rating     Float
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  author     User       @relation("wrtPosts", fields: [authorId], references: [id])
  authorId   String
  favUsers   User?      @relation("favPosts", fields: [favUsersId], references: [id])
  favUsersId String?
  categories Category[]
}

model Category {
  id    String @id @default(uuid())
  name  String @unique
  posts Post[]
}

enum Role {
  USER
  ADMIN
}
